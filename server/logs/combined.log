{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '92212dec-787d-4015-a43f-2c358e71979f',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '34'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 1136
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T11:28:06.716Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'ccfec5c3-8989-4811-86c4-797b25cfaac4',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 135
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes/',
  timestamp: '2023-08-25T11:28:27.654Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'e2bdeae7-6b04-42d6-a100-41e657dc86a1',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 317
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T12:35:27.521Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'd0dbd021-7db3-41b2-88e7-ed64c13aa3e6',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 133
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes/',
  timestamp: '2023-08-25T12:35:40.495Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'e660fb3f-f5b5-4183-b076-d47c5dfac799',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 201
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP DELETE /notes/',
  timestamp: '2023-08-25T12:35:53.849Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '8dea96da-acb6-48ee-bc18-4e5103a35543',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 192
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes/',
  timestamp: '2023-08-25T12:35:56.988Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '1bfdd658-ea73-4425-898a-ec1444be0c5d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 557
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T12:36:01.861Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'efb7859e-1e1e-402a-9df8-56bb617e9206',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 135
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes/',
  timestamp: '2023-08-25T12:36:05.048Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '6bb3f0e2-9841-42ce-9001-6c8e48900452',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 272
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T12:36:10.813Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'bae13f3b-c0bd-4424-a16a-6bef9d1511da',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 289
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T12:36:15.353Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '820a24b5-f4e2-4f2b-8e96-b8c1cc87b4f6',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 132
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes/',
  timestamp: '2023-08-25T12:36:18.754Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '2ade946e-f6c7-4b25-ad90-51b24ff886c0',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 307
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T12:54:56.257Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f3b64a43-f348-4750-9006-c94b69fd9324',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 325
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T12:55:34.419Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'ba6c5f13-e3fd-44e6-8dc5-9e466425ffe5',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 288
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T12:55:54.468Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '4d0680fe-6513-4c29-85d5-6f7ed6e85b06',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:01:59.032Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '28ca6db0-c441-4041-9eaf-03b71364d789',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 165
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:02:18.373Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '7f27cc48-0551-4f39-96f3-a845c53bb49d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 150
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:03:02.770Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'c71f027e-552c-4305-9b95-6dced0d25eb0',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 281
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:10:17.433Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '94f11913-5c5c-42d0-a692-d82b7c7ff5a0',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 356
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:10:22.357Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'aad0bf07-e127-42da-b6fa-038a09c6ef4f',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 272
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:10:28.346Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '40f7c86b-6fa0-457f-bcd9-e1f54c9dc7bc',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 273
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:10:34.419Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '16070761-88eb-44be-af3e-82ad55bf47e6',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 1047
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:11:53.481Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'fa217462-8a1b-451d-870e-d63d9f26d436',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 332
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:11:56.211Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '19e255a3-0199-4cbb-89e3-743e0e1c815b',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 151
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP DELETE /notes/',
  timestamp: '2023-08-25T13:14:12.229Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '90d92990-87a7-459a-af33-ca34f47f742d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 289
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:14:15.574Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '1327f1f6-f60b-458e-98ef-a24b6848fa9c',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 270
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:14:16.913Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '5c8ab59d-d24c-4ea4-b20d-795191bc4a54',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 274
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:14:18.819Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'ca0b1bc4-20f2-4766-9208-ea9f14394621',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 147
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes/',
  timestamp: '2023-08-25T13:15:38.186Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '475d925b-e73f-426b-86ed-d77f5333d6bc',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 131
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes/',
  timestamp: '2023-08-25T13:15:39.440Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'd5401f43-e8c1-4c3d-9681-31da9a82ac37',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 287
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:15:44.040Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'db226af4-dfd2-4009-a6d5-464d74881bbd',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 191
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP DELETE /notes/',
  timestamp: '2023-08-25T13:15:47.283Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'e783973c-6a7b-4318-a9b1-dc6b1e98b9cf',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 143
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:15:49.803Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'ae3e6579-7982-4d7a-8083-221e972910d4',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 130
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:15:50.818Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '86c5df70-10b4-4895-b200-b7f1141b68b3',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 217
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP DELETE /notes/',
  timestamp: '2023-08-25T13:15:55.147Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'e36fe26f-0d99-4e52-a843-66629679006d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 201
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:15:57.897Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '1bf9223a-8e47-4c55-994b-71d339a74eb7',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 372
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:17:03.312Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '4f308ecb-6bcc-461c-9d45-c9c9fcf000cc',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 356
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:17:05.142Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '35a14781-ffdc-4df9-9df9-85305fa368c8',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 299
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:17:21.676Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'af778d8f-9bf1-44b9-9ae1-318f5b5b455d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 274
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:17:23.236Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '6c4119f0-6ac3-4258-afce-18d39d80b95c',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 140
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP DELETE /notes/',
  timestamp: '2023-08-25T13:17:42.150Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '483e70ea-1b17-4809-8f30-f800e3d34c27',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 207
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP DELETE /notes/',
  timestamp: '2023-08-25T13:17:52.586Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '1f30f226-16cd-4b69-8854-7b53bb607581',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 264
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:17:56.105Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '0e95f596-6c80-4117-95b3-c3fe7dbe535e',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 274
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:17:57.645Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'b483c207-165f-49fe-9069-1f1fef6e2983',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 263
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:17:59.274Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'a3b2beae-5392-42cd-902b-765a23211a90',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 345
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:20:25.689Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'fb992857-83d4-459c-875e-d9bb0fbf1e7d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 305
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:20:35.812Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '807f926c-a420-4ec6-9ac1-6ae293a71208',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 298
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:22:14.509Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '34918578-349d-43ad-b356-989b0419089b',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 344
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:22:18.011Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'e260918e-cd85-499e-9d11-73b71ab75fc2',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 271
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T13:22:22.349Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'ec193ff2-8949-463e-b3d1-83ecb283d872',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 1325
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T14:49:14.906Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'e2b80f3e-a2bd-4a63-b48b-4587c74d45f3',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 184
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes/',
  timestamp: '2023-08-25T14:49:21.731Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '96b79403-2be3-4fd9-9961-0a39026bbd48',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 189
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP DELETE /notes/',
  timestamp: '2023-08-25T14:49:36.511Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '6240501a-5905-4814-87f6-eeb910247fe4',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 437
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T14:50:00.813Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'a2d5c460-bc2c-43f9-b6db-1d9765b92803',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 365
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T14:50:02.230Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '6d86d614-38a3-4a84-9b1c-69c46afafa34',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 267
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP DELETE /notes/',
  timestamp: '2023-08-25T14:50:09.412Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"macOS"',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-purpose': 'prefetch;prerender',
        purpose: 'prefetch',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'sec-fetch-site': 'none',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-user': '?1',
        'sec-fetch-dest': 'document',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"493-18a1c916e8e"',
        'if-modified-since': 'Tue, 22 Aug 2023 09:26:47 GMT'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 7
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-08-25T14:51:58.708Z'
}
{
  meta: {
    req: {
      url: '/users/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"macOS"',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'sec-fetch-site': 'none',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-user': '?1',
        'sec-fetch-dest': 'document',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/users/login',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 5
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /users/login',
  timestamp: '2023-08-25T14:52:05.807Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"macOS"',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'sec-fetch-site': 'none',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-user': '?1',
        'sec-fetch-dest': 'document',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 5
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/login',
  timestamp: '2023-08-25T14:52:15.748Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'cache-control': 'max-age=0',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"macOS"',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'sec-fetch-site': 'none',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-user': '?1',
        'sec-fetch-dest': 'document',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/login',
  timestamp: '2023-08-25T14:52:54.354Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'cache-control': 'max-age=0',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"macOS"',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'sec-fetch-site': 'none',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-user': '?1',
        'sec-fetch-dest': 'document',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/login',
  timestamp: '2023-08-25T14:53:15.520Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'cache-control': 'max-age=0',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"macOS"',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'sec-fetch-site': 'none',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-user': '?1',
        'sec-fetch-dest': 'document',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/login',
  timestamp: '2023-08-25T14:53:19.402Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'cache-control': 'max-age=0',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"macOS"',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'sec-fetch-site': 'none',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-user': '?1',
        'sec-fetch-dest': 'document',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 8
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/login',
  timestamp: '2023-08-25T14:53:32.316Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'd35696a8-0eda-4ff9-8670-8a7ec32a427d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 320
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T14:55:25.300Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '9649058a-a2c4-420c-9ec8-6d7e2786a498',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 421
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T14:56:03.075Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'cca90184-6c9d-414d-9aa3-3d72c5dc5885',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 188
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes/',
  timestamp: '2023-08-25T14:56:44.588Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'c796fba9-d1c1-4074-a7f8-d0688fac8317',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 147
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP DELETE /notes/',
  timestamp: '2023-08-25T14:57:05.866Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'de882053-a6e6-45d2-a41a-b9f2cd5b1b49',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '27'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 336
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /notes',
  timestamp: '2023-08-25T14:57:41.329Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'c3d0193e-dd97-465f-895c-3788b70389a5',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 155
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes/',
  timestamp: '2023-08-25T14:57:41.522Z'
}
{
  meta: {
    req: {
      url: '/notes/all',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'e6f7f188-bfa8-423d-8d50-8d1d2166e65d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '13'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes/all',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 133
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes/all',
  timestamp: '2023-08-25T14:57:41.668Z'
}
{
  meta: {
    req: {
      url: '/notes/NCS8LNu-J1',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'edef4087-2594-4ac8-9986-2593e8a81c39',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '26'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/notes/NCS8LNu-J1',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 170
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP PUT /notes/NCS8LNu-J1',
  timestamp: '2023-08-25T14:57:41.851Z'
}
{
  meta: {
    req: {
      url: '/notes/fn0pFZ8wQ',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '3ea556d3-57f1-451f-96a2-994be71d5bf9',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/notes/fn0pFZ8wQ',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 168
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP DELETE /notes/fn0pFZ8wQ',
  timestamp: '2023-08-25T14:57:42.032Z'
}
{
  meta: {
    req: {
      url: '/notes/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '291e3621-4fa4-40f9-be8f-663d6c7ffce9',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/notes/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 203
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP DELETE /notes/',
  timestamp: '2023-08-25T14:57:42.247Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '5403dfa7-3869-4935-9ffe-b7a4f8fe7c4a',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/',
  timestamp: '2023-08-25T14:58:24.692Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '98412b18-f3ff-4f22-83d0-a4808a4e1b91',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-25T14:58:37.848Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'c450dcbe-53be-4c3b-bdfc-92eb82218467',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-25T14:59:55.610Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'eaf0dc38-9b2b-4a50-aa76-9282f015ab5c',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/register',
  timestamp: '2023-08-25T15:00:29.190Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f9efa32a-3586-4109-8f66-f4f1198ba51b',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 5
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-25T15:01:04.314Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '226be95e-86da-41fd-9ca8-5a297c9a6dd2',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 13
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-25T15:26:01.061Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'a41a4476-d581-4811-8c49-04f20dd59c98',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-25T15:26:31.127Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '6a1740f0-ce73-4968-8333-617b2b0505aa',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------522271028764060459967464',
        'content-length': '278'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-25T15:26:55.865Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f9752d20-6796-4abd-808f-fe180ba24928',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------342030240518044314604918',
        'content-length': '278'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-25T15:27:28.036Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '9f469966-d163-4989-a716-4283418df73c',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-25T15:28:11.912Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '06b92b30-e4f5-4fe2-941c-688f68663f72',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-25T15:28:47.180Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'c0b821b0-8a0d-49a1-930a-15a7c8028c2d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------331809938741337338529639',
        'content-length': '277'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-25T15:29:03.028Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '6547a87f-5e19-41b3-9eaf-616a20e52927',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------992479286716967663091071',
        'content-length': '277'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-25T15:32:52.530Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '71b522ee-1d97-432a-885f-9a31b3a7a0ce',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------271982263012002205156054',
        'content-length': '277'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-25T15:34:08.894Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'c7c73bdc-0457-4684-b9db-3492614a5178',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------528901916497228946794059',
        'content-length': '277'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-25T15:34:12.598Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '6b26a717-2ee0-4f98-96e1-8de668ca24c0',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------610919674687855567783434',
        'content-length': '277'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-25T15:34:13.919Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '4b4a79c6-8187-480a-9d83-001d7137f848',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------052294026441697109390690',
        'content-length': '277'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-25T15:34:41.611Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '3923b5a6-5f9f-4370-8eed-ccb116b0093b',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------615641131521913912155620',
        'content-length': '277'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 6
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-25T15:34:57.402Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f2d22ee9-b182-41e8-8953-6c72e4693a0b',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------131250730542424993717276',
        'content-length': '277'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-25T15:35:18.854Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'content-type': 'text/plain',
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '87b94fcb-dccc-4aaa-ade3-9f070f9dddb3',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-25T15:35:48.661Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'content-type': 'application/javascript',
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f0d7e5bc-9433-4a6f-b2aa-2a187e5eb633',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-25T15:36:38.148Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'content-type': 'application/javascript',
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'ff170ec2-479e-4ba6-8867-f750b30a3c50',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-25T15:37:10.996Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '9060e2de-528d-4b7a-a2b0-81b584511103',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------891150543487909394378466',
        'content-length': '277'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 6
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-25T15:39:04.105Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '3c5e6bec-ad88-4316-b799-5fcd4a6e5d83',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------721683899686940227834136',
        'content-length': '277'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 7
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-25T15:40:14.055Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'bdb6fc40-a37f-4316-9435-2428a13486d3',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '10'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-25T15:41:04.562Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '33db3643-cdec-490d-bc83-2eff56635bf6',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '26'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-25T15:41:26.708Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f1987563-8483-4cee-99b9-07ef3a063ead',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '26'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-25T15:41:40.695Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f3d04f4f-ebf8-4381-8554-641032ed768c',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '26'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-25T15:41:56.583Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'b3d15713-8251-468c-ae10-1a033241219c',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '36'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 12
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-25T15:45:10.013Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '92097ac2-6c01-4ca4-a6f8-29394b19a433',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '42'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-25T15:45:17.550Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'd0b03762-0d8e-4896-bc6d-02225096a41c',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '42'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 8
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-25T20:25:01.311Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f4d16f6a-a43a-42b6-84b0-b3dcf6ac4028',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '42'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 409 },
    responseTime: 175
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-25T20:26:26.907Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'e77cb511-c51e-4abb-b77a-f8d5f89c565f',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '42'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 409 },
    responseTime: 147
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-26T21:27:04.139Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '7115d283-b4bc-40a9-87b0-86d9b7bb951f',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 409 },
    responseTime: 140
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-26T21:30:28.610Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'e74c4bb7-4f30-42e1-afc4-894cf146224c',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 409 },
    responseTime: 174
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-26T21:31:23.977Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '6201d35c-5072-4f99-8a58-9405400eb1f3',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 409 },
    responseTime: 140
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-26T21:31:33.729Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '8498ff4e-b3be-4270-90ba-b5162331c09a',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 409 },
    responseTime: 139
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-26T21:32:09.886Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'b5105332-d268-4223-ab00-df9b53d3db6e',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 409 },
    responseTime: 149
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-26T21:33:35.982Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '6a8a2f39-bdde-4821-8cf2-9d52c6145d64',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 409 },
    responseTime: 155
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-26T21:34:13.488Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '256224f4-6fee-4209-a838-bd9ffd1be439',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 422
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-26T21:34:54.018Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '50172155-003c-4ca8-b332-5a43a74647fa',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-26T21:35:36.552Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '7feb2d53-d3ab-4cd3-940b-9c132015f733',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 429
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-26T21:36:38.671Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'a1c0c261-7234-4506-9ec3-865346145380',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 422
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-26T21:37:18.890Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '093afff0-f90e-4398-b3a9-cad1d5a9b892',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 294
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-26T21:49:50.275Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '64e01120-7de1-480b-b5fc-24dab6398be1',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 283
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-26T21:50:24.817Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '9f376000-2b97-4a43-a5e4-7108fb5d4ab1',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 273
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-26T21:50:51.620Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'cd6192f0-e18d-407d-b87c-154700d308c1',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 289
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-26T21:57:00.293Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'bf3022a1-da2b-4ec3-b8f6-0113972ca986',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 280
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-26T21:57:47.459Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'e055bda4-60d7-40ef-92fb-80be39e270e8',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 409 },
    responseTime: 152
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-27T18:58:18.842Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f094b782-ff57-41d0-b668-ebc83a41f1e7',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 502
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-08-27T18:58:32.893Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '7ee9a26a-7e86-4815-88cc-6a60cb5d570e',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 451
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T18:58:36.796Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '12c4b99d-6c6a-482b-b664-9affd8f669ee',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 268
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T18:58:51.038Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f51bcba4-3627-4b1c-9d18-e6f737508c9d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 271
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T18:59:03.248Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '539f210c-4fa3-4293-9f9c-9e52a79ab146',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 266
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T18:59:11.464Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '9a94e55c-fcf5-46c9-910c-5ffbef4eff62',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 265
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T18:59:17.341Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'fb38e6ce-255e-4ace-bcd3-e089a111f8a1',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 259
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T18:59:23.905Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'a48ef825-6b1f-44dc-b205-d7f3221d700a',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 267
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T18:59:26.617Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'd0fb0b71-205a-4bff-9a93-d4a5755dee10',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 267
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T18:59:28.927Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f2caa76d-e55b-4612-b5e2-6d6c2864cd4e',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 295
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:00:24.795Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'c005c1a3-400f-4b27-8683-eac4413c57dc',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 270
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:00:31.482Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '5c956854-083a-47f1-a366-84f943c47f70',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 262
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:00:33.570Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'a2c62f3c-dd27-4ff7-aeee-cd07ffcbab9f',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/',
  timestamp: '2023-08-27T19:01:21.294Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '0952c95a-e286-4f93-9874-43750642a8ce',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/',
  timestamp: '2023-08-27T19:01:30.102Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f8ad05fd-ac27-4972-8ab9-480c33f26232',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 434
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-08-27T19:02:41.922Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'd5430af0-40bf-4bf2-b135-49ffe7ec5498',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 276
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:02:48.718Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'e12576c5-f418-419f-8971-d03528254163',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 262
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:02:53.179Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'ae2f2f7e-f8c1-4235-b1d0-e93cdde733ee',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 269
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:02:56.998Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '835ece07-90b1-4942-9395-32224f256cfe',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 268
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:03:00.749Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'c6a5d5e6-2b8b-4768-9fad-6e8a3721a440',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 272
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:03:06.844Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'f1b190c7-28c4-4cf3-9988-92d442160ff3',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 269
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:03:11.298Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'e5eecf64-d33f-4c12-8802-b003566f74f7',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 329
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:03:42.269Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '814c8dac-66ea-4770-a6ab-b87532eedd4f',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 279
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:05:05.363Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '8297a479-1d5d-42c6-923e-62eb98e463e6',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 289
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:05:46.227Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '6b2666d5-f1eb-40a4-82ae-a87fdc240349',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 299
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-27T19:06:46.049Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '123e2fe5-ec8c-456d-9023-fab5f53e1762',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 292
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:29:49.496Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '2b76b14c-fd20-4a38-9c4d-c49fc10cc02d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 6
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-08-28T09:30:37.827Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '40f4a0d6-3edc-4b9a-87b6-c0e8cab65d70',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-08-28T09:30:43.642Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '41a0a03c-49ba-40ab-b0da-ce838b2612c8',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 282
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:27.205Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '6737a53a-8521-4727-9d97-95d4d059161e',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 270
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:31.137Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '0014a2b6-f2b6-435a-aa3f-e851461a3c29',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 264
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:32.958Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '8f67bde1-90ff-4b70-9d96-414f4803dc94',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 264
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:41.987Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '9d13781a-7378-4119-83bd-d33d0072b093',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 277
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:43.673Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '0f8b7a95-cc98-414c-8bb8-b60a1fed2802',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 266
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:45.396Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'dc260488-a0a2-4f14-a8ea-b7543013f10e',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 261
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:46.502Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'b257aefe-9177-440c-bd52-16a958d02e62',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 247
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:47.690Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': 'bb375e26-0685-4659-b13c-baf849a4501b',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 265
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:48.891Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '3c4caf43-57a0-46cb-b7fc-f2cb7323502d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 264
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:50.075Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '0935fb9e-adf9-40c2-8f6c-2161dcad1b4a',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 259
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:51.713Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '53568cd4-f026-41ca-b512-cef24fd52ae6',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 269
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:53.259Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '20fd8ce4-b73b-4020-aa50-a5942813cfb1',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 266
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-28T09:39:55.255Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 151
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-29T11:15:07.558Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 130
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-29T11:15:07.693Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 142
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-29T11:18:07.550Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 127
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-29T11:18:07.680Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 141
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-29T11:21:12.462Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 127
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-29T11:21:12.595Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 135
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-29T11:21:20.011Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 141
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-29T11:21:47.205Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 131
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-29T11:21:47.339Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 143
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-29T11:21:53.567Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 128
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-29T11:21:53.706Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"macOS"',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-purpose': 'prefetch;prerender',
        purpose: 'prefetch',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'sec-fetch-site': 'none',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-user': '?1',
        'sec-fetch-dest': 'document',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 18
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-08-29T11:38:16.411Z'
}
{
  meta: {
    req: {
      url: '/favicon.ico',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: 'image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'no-cors',
        'sec-fetch-dest': 'image',
        referer: 'http://localhost:8080/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/favicon.ico',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 9
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /favicon.ico',
  timestamp: '2023-08-29T11:38:17.047Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '38',
        'cache-control': 'max-age=0',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"macOS"',
        'upgrade-insecure-requests': '1',
        origin: 'http://localhost:5173',
        'content-type': 'application/x-www-form-urlencoded',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-user': '?1',
        'sec-fetch-dest': 'document',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 10
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-29T11:40:47.607Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '60',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 5
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-29T11:56:40.164Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '60',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-29T11:56:56.386Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.3',
        accept: '*/*',
        'postman-token': '8a697f9a-57bc-46e8-a5aa-1c785354d282',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 144
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-08-29T12:00:22.988Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '64',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 135
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-29T12:00:39.432Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '64',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 145
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-29T12:13:58.380Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '64',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 143
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-29T12:14:01.666Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '64',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 140
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-29T12:14:31.522Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '64',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 143
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-29T12:15:39.414Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '64',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 147
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-29T12:17:05.350Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 153
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-29T12:40:55.993Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 173
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-29T12:41:23.622Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '0',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-08-29T12:41:53.994Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 309
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T12:44:02.231Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 275
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T12:44:54.061Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 294
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T13:00:21.032Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1451
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T18:20:11.488Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '51',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 308
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T18:20:21.434Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '54',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 155
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T19:06:05.606Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '54',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 132
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T19:07:16.384Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 286
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T19:07:24.154Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 323
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T19:09:04.729Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 276
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T19:10:11.321Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 363
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T19:25:53.716Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 319
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T19:26:42.926Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '46',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 281
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-29T19:26:54.986Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 311
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-30T11:51:25.759Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 285
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-30T11:52:32.793Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '56',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 267
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-30T11:57:57.454Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '56',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 139
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-30T11:57:57.678Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '56',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 488
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-30T11:57:58.173Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 591
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-30T12:55:21.441Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1001
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-30T15:41:09.852Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 146
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:37:57.033Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 129
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:37:57.165Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 131
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:38:08.032Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 134
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:38:08.168Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 127
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:38:38.768Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 131
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:38:38.903Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 136
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:39:15.767Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 125
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:39:15.894Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 137
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:40:02.814Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 136
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:40:02.952Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 131
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:45:06.042Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 132
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:46:28.202Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 127
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:46:28.331Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 126
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:46:29.594Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 127
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:46:29.722Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 130
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:46:31.274Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 127
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T16:46:31.402Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 139
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T17:11:01.287Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 130
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T17:11:08.152Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 232
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T17:13:11.468Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 125
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T17:13:11.595Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 467
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T17:13:13.240Z'
}
{
  meta: {
    req: {
      url: '/notes',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'sec-ch-ua-platform': '"macOS"',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7',
        'if-none-match': 'W/"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w"'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/notes',
      query: {}
    },
    res: { statusCode: 304 },
    responseTime: 148
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /notes',
  timestamp: '2023-08-30T17:13:13.390Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: 'localhost:8080',
        connection: 'keep-alive',
        'content-length': '50',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
        'sec-ch-ua-platform': '"macOS"',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
        'content-type': 'application/json',
        accept: '*/*',
        origin: 'http://localhost:5173',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:5173/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 368
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-08-30T17:27:35.854Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60857',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T09:07:43.085Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61294',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T09:09:24.463Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61380',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T09:09:45.396Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:63637',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T09:35:58.162Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:64070',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T09:37:41.346Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:64118',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T09:37:51.519Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:64306',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T09:38:37.502Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:64534',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T09:39:29.454Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:52104',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T09:54:28.643Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:52550',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T09:56:14.471Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:55172',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T10:11:01.209Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:55392',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T10:11:55.770Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:55651',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T10:12:58.144Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:55946',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T10:14:01.122Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:56647',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T10:16:47.537Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:56980',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T10:18:10.263Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:57126',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T10:18:46.307Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:57219',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T10:19:07.753Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:57540',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T10:20:26.541Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:57723',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-16T10:21:11.065Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61324',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T09:08:13.180Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61424',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T09:08:37.079Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61574',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T09:09:12.068Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '8b7cf615-cddd-4ff6-a649-c481443b3850',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/login',
  timestamp: '2023-09-17T09:21:24.852Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'c4391883-d5cf-4a58-b433-2d4545132464',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/login',
  timestamp: '2023-09-17T09:23:04.514Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '08c11280-9021-4ce7-855b-a4762087c182',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-17T09:30:08.546Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'a876d1cd-6e11-43cb-8335-5250a1975491',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-17T09:31:34.633Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'ef363dc3-ea5e-4aac-a7ba-ed00fa9daf83',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-17T09:31:51.054Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'a78c8c51-63db-4fe3-838d-f3495ceb31a1',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 5
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-17T09:32:20.553Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'a849fb4c-cb4b-40c6-b1b1-66e4582505fb',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-17T09:33:50.127Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '5959f96d-07aa-4ab3-a3d7-f8f2c7d35704',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-17T09:34:04.841Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'fdf421e4-9ab7-47d0-9334-8089ce6c5c55',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-17T09:34:49.524Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '371f18cd-288d-4af6-87c5-dacfb9b99a0b',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-17T09:35:43.683Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '5b9a2aae-b878-490d-b7c8-1c5b03ec59ba',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 7
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-17T09:36:05.456Z'
}
{
  meta: {
    req: {
      url: '/users/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'd505e27e-72ba-4a86-b521-76b5d1997e5b',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/users/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /users/',
  timestamp: '2023-09-17T09:36:36.052Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:52694',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T09:38:40.233Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:53451',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T09:41:43.031Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:53453',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T09:41:43.046Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:53532',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T09:42:02.115Z'
}
{
  meta: {
    req: {
      url: '/register',
      headers: {
        host: '127.0.0.1:53534',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/register',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /register',
  timestamp: '2023-09-17T09:42:02.136Z'
}
{
  meta: {
    req: {
      url: '/register',
      headers: {
        host: '127.0.0.1:53536',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/register',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /register',
  timestamp: '2023-09-17T09:42:02.143Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:53538',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T09:42:02.146Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:53629',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T09:42:24.267Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:53631',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T09:42:24.285Z'
}
{
  meta: {
    req: {
      url: '/register',
      headers: {
        host: '127.0.0.1:53633',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/register',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /register',
  timestamp: '2023-09-17T09:42:24.292Z'
}
{
  meta: {
    req: {
      url: '/register',
      headers: {
        host: '127.0.0.1:53635',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/register',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /register',
  timestamp: '2023-09-17T09:42:24.296Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:53637',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T09:42:24.299Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:54210',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T09:44:42.863Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:54212',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T09:44:42.881Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:54214',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T09:44:42.887Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:54355',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T09:45:17.821Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:54357',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T09:45:17.838Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:54359',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T09:45:17.847Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:54498',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T09:45:51.757Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:54500',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T09:45:51.775Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:54502',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T09:45:51.782Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58905',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:03:15.506Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58907',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:03:15.524Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58909',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T10:03:15.532Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59271',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:04:43.951Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59273',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:04:43.968Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59275',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T10:04:43.975Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59395',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:05:13.304Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59397',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:05:13.322Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59399',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T10:05:13.328Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59553',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:05:50.436Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59555',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:05:50.453Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59557',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T10:05:50.461Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59801',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:06:48.881Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59803',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:06:48.898Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59805',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T10:06:48.913Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60208',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:08:26.462Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60210',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:08:26.479Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:60212',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T10:08:26.492Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60352',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:09:00.789Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:60354',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close',
        'content-length': '0'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /welcome',
  timestamp: '2023-09-17T10:09:00.799Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60463',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:09:26.957Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:60465',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:09:26.967Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60554',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:09:47.478Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60556',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:09:47.488Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60645',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:10:08.679Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:60647',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:10:08.690Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60728',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:10:27.955Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:60730',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 403 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:10:27.966Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60848',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:10:55.963Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:60850',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:10:55.975Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60978',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:11:25.256Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60980',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:11:25.272Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:60982',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:11:25.283Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61096',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:11:50.651Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61098',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:11:50.669Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61100',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:11:50.677Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61236',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:12:24.164Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61238',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '54',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:12:24.180Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61240',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:12:24.187Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61422',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:13:08.652Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61424',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '59',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:13:08.671Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61426',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:13:08.678Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'content-type': 'application/javascript',
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'c5a8b5dd-d68d-4c3b-a8e2-979f64650877',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-17T10:30:18.985Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '72bf5de1-e58a-47c2-9e51-440bdb8f6480',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 133
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-17T10:30:42.736Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:62907',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:31:09.555Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:62909',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 123
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:31:09.694Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:62911',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:31:09.700Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:63031',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:31:36.209Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:63033',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 119
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:31:36.348Z'
}
{
  meta: {
    req: {
      url: '/register',
      headers: {
        host: '127.0.0.1:63035',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/register',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /register',
  timestamp: '2023-09-17T10:31:36.354Z'
}
{
  meta: {
    req: {
      url: '/register',
      headers: {
        host: '127.0.0.1:63037',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/register',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /register',
  timestamp: '2023-09-17T10:31:36.358Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:63039',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:31:36.361Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:63462',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:33:20.051Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:63464',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 122
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:33:20.191Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:63466',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:33:20.197Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:63468',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:33:20.200Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:63470',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:33:20.204Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:63662',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:34:06.803Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:63664',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 130
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:34:06.948Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:63666',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:34:06.953Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:63668',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:34:06.956Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:63670',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:34:06.959Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:64341',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:36:35.381Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64343',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 122
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:36:35.519Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64345',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:36:35.525Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64351',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:36:35.528Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:64353',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:36:35.531Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:64673',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:37:52.282Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64675',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 127
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:37:52.425Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64677',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:37:52.428Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64679',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:37:52.431Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64681',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:37:52.546Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:64683',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:37:52.551Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:64884',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:38:41.214Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64886',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 121
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:38:41.351Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64888',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:38:41.355Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64890',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:38:41.358Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64892',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:38:41.474Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:64898',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:38:41.479Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:64950',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:38:54.117Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64952',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 125
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:38:54.261Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64954',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:38:54.265Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64956',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:38:54.268Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:64958',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:38:54.383Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:64960',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:38:54.389Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:65047',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:39:15.338Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:65049',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 122
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:39:15.476Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:65051',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:39:15.480Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:65053',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:39:15.483Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:65055',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:39:15.598Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:65057',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:39:15.602Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:65277',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T10:40:07.842Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:65280',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 126
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:40:07.985Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:65282',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:40:07.989Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:65284',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:40:07.992Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:65286',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T10:40:08.108Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:65292',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T10:40:08.114Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59106',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T17:59:58.926Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59108',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 125
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T17:59:59.071Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59110',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T17:59:59.075Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59112',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T17:59:59.078Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59114',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T17:59:59.195Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59116',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T17:59:59.201Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59135',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-17T18:00:12.687Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59137',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 121
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T18:00:12.825Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59139',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T18:00:12.829Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59141',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T18:00:12.832Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59143',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-17T18:00:12.947Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59145',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-17T18:00:12.953Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60883',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T07:38:05.534Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60885',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 126
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:38:05.682Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60887',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:38:05.685Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60889',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:38:05.689Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60891',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:38:05.805Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:60893',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-18T07:38:05.811Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=piotr@piotr.pl&password=QWErty123!',
      headers: {
        'content-type': 'application/javascript',
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '0d1b6466-100b-4afd-87c4-546c58923efd',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=piotr@piotr.pl&password=QWErty123!',
      query: { email: 'piotr@piotr.pl', password: 'QWErty123!' }
    },
    res: { statusCode: 400 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=piotr@piotr.pl&password=QWErty123!',
  timestamp: '2023-09-18T07:43:28.163Z'
}
{
  meta: {
    req: {
      url: '/user/register',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '0c9a529a-32a4-4e81-b401-03e390e4bb0c',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 129
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register',
  timestamp: '2023-09-18T07:43:54.894Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61167',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T07:44:40.599Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61169',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 121
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:44:40.740Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61171',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:44:40.745Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61173',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:44:40.750Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61175',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:44:40.865Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61177',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:44:40.981Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61179',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:44:40.984Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61181',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:44:40.987Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61183',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:44:41.102Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61185',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-18T07:44:41.107Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61198',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T07:46:16.788Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61200',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 123
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:46:16.931Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61202',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:46:16.936Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61204',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:46:16.941Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61206',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:46:17.057Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61208',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:46:17.174Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61210',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:46:17.177Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61212',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:46:17.180Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61214',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:46:17.295Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61216',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-18T07:46:17.301Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61224',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T07:47:43.618Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61226',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 154
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:47:43.792Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61228',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:47:43.797Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61230',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:47:43.802Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61232',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:47:43.917Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61234',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:47:44.033Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61236',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:47:44.036Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61238',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:47:44.039Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61240',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:47:44.154Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61242',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-18T07:47:44.160Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61258',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T07:49:35.854Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61260',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 126
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:49:36.000Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61264',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:49:38.014Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61266',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 123
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:49:38.142Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61268',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:49:38.259Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61270',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:49:38.262Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61272',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:49:38.266Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61274',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:49:38.382Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61276',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-18T07:49:38.387Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61286',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T07:50:14.112Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61288',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 136
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:50:14.269Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61290',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:50:14.274Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61292',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:50:14.278Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61294',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T07:50:14.393Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61296',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:50:14.509Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61298',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:50:14.513Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61300',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:50:14.516Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:61302',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T07:50:14.631Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61304',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-18T07:50:14.637Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'content-type': 'application/javascript',
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'e294d21c-1ae0-427e-b165-25582a9998ae',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '45'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 13
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T11:47:16.992Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'e1f2d218-8e08-46ab-bcae-e5a8828e9c22',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'multipart/form-data; boundary=--------------------------815153730109670817384070',
        'content-length': '275'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T11:47:32.546Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '4fb3124a-1c41-43a7-8fd2-9a4ce4f92ad4',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '24'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T11:47:42.548Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'c2944d23-0782-4d69-82b3-97ec06f41288',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '34'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T11:47:48.775Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'cb6ac23d-315d-43ba-94c1-03bf2f84e968',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '40'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 125
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T11:48:39.744Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'aa815d90-456d-4939-9130-77f1f14aaa0c',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '40'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 128
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T11:49:44.907Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'b703e846-5475-4dd4-9063-749619c487db',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '40'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 123
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T11:50:44.876Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '4f0f4fcd-a0b1-4eb9-8681-2ee4c34f011f',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '40'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 124
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T11:52:35.613Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '30656b78-6d42-4f7d-a65b-7c02881ddc1f',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '40'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 126
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T11:54:25.204Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '8f42c8a8-94d9-40dc-a002-7c84a0c8f61e',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '40'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 144
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T11:55:36.617Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '5fff9850-3211-478f-bd3d-f5b20cb602a7',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '40'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 125
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T12:27:47.526Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'ae76ceed-dee4-49e5-9f9a-dc490645cce9',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '40'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 125
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T12:32:09.375Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '3231a9eb-a84a-414f-b806-c2d0172b38eb',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 19
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/login',
  timestamp: '2023-09-18T14:52:19.631Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '71a2a095-3454-495a-9850-a8ee5b44f93d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 17
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-18T14:52:36.277Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '98aa34dd-2033-48a6-b177-49d5394dc4ed',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '40'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 409 },
    responseTime: 139
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T14:54:14.761Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '995356f9-d344-43b3-b58b-7e03f974fbe2',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '41'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 150
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T14:54:21.574Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '6e625f9c-70dc-4e7c-b8ab-1f81c8ea368b',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '41'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T14:54:24.483Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '2c6189e2-dc3a-455d-bfe6-54d47dabffe5',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '41'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T14:54:27.271Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '6f1ceb57-578f-46de-a13b-5a71ed7407cd',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '41'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 134
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T14:54:31.148Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '862cab38-60e7-43bc-a4c9-494d0d7bd22d',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-18T14:55:56.035Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '5c23a8cf-0b45-4618-98fd-32cf8b146530',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-18T14:56:17.390Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '370e893f-7d67-4bb7-8f55-a3923a355306',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 6
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-18T14:57:02.312Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '5176ea4e-d7f9-4e8a-acd0-97fb33afd2c9',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-18T15:00:03.579Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '929a830d-4e23-41cf-9a2c-b83073600dcf',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 6
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T16:02:37.231Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'd5f5ccc2-0bc3-49e2-90cc-eb20a661d098',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T16:03:21.064Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '3f27676d-d76a-452b-8038-abd7a9135d4b',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T16:03:26.327Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'ac6002ea-ef1b-45e0-97b5-7a839052ec8a',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T16:03:38.574Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '2789a5d6-a9c2-494f-9749-efd3ee3f3f04',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T16:04:16.579Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '4e233244-f18b-4e14-a8d6-cf94a576da57',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T16:04:30.459Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'f7949a9f-f59f-49a7-afb6-028e667935d7',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-18T16:04:53.868Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '7d439a44-ec60-4550-b57b-8aee61ca0511',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 21
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-18T17:01:52.335Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'e96245e7-bed9-4a1a-a2a2-83b5a28149cf',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-18T17:02:08.398Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:50938',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T17:04:46.488Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:50940',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T17:04:46.509Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '3a9f30fa-e929-40db-9d3f-3509ba3ecb16',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 126
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-18T17:07:06.892Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:50986',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T17:07:23.416Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:50988',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 121
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T17:07:23.557Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:50990',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T17:07:23.561Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:50992',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T17:07:23.565Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:50994',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-18T17:07:23.680Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:50996',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T17:07:23.797Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:50998',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T17:07:23.800Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:51000',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T17:07:23.803Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:51002',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-18T17:07:23.918Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51004',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-18T17:07:23.924Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:52432',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T21:36:43.716Z'
}
{
  meta: {
    req: {
      url: '/api/users/1',
      headers: {
        host: '127.0.0.1:52434',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/users/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /api/users/1',
  timestamp: '2023-09-18T21:36:43.726Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:52440',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T21:37:23.208Z'
}
{
  meta: {
    req: {
      url: '/users/1',
      headers: {
        host: '127.0.0.1:52442',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/users/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /users/1',
  timestamp: '2023-09-18T21:37:23.220Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:52445',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T21:37:38.268Z'
}
{
  meta: {
    req: {
      url: '/users/1',
      headers: {
        host: '127.0.0.1:52447',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/users/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /users/1',
  timestamp: '2023-09-18T21:37:38.279Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:52451',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T21:38:15.818Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:52453',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T21:38:15.829Z'
}
{
  meta: {
    req: {
      url: '/api/users/2',
      headers: {
        host: '127.0.0.1:52455',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/users/2',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /api/users/2',
  timestamp: '2023-09-18T21:38:15.833Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:52459',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T21:38:39.038Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:52461',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T21:38:39.049Z'
}
{
  meta: {
    req: {
      url: '/user/2',
      headers: {
        host: '127.0.0.1:52463',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/2',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/2',
  timestamp: '2023-09-18T21:38:39.053Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:52465',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T21:39:44.070Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:52467',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T21:39:44.081Z'
}
{
  meta: {
    req: {
      url: '/user/20',
      headers: {
        host: '127.0.0.1:52469',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/20',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/20',
  timestamp: '2023-09-18T21:39:44.085Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:52471',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T21:39:53.011Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:52473',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T21:39:53.022Z'
}
{
  meta: {
    req: {
      url: '/user/20',
      headers: {
        host: '127.0.0.1:52475',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/20',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/20',
  timestamp: '2023-09-18T21:39:53.027Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:52479',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T21:40:10.198Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:52481',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T21:40:10.208Z'
}
{
  meta: {
    req: {
      url: '/user/13314124',
      headers: {
        host: '127.0.0.1:52483',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/13314124',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/13314124',
  timestamp: '2023-09-18T21:40:10.212Z'
}
{
  meta: {
    req: {
      url: '/user/114215123',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '24105ef3-fdfc-42f6-a104-40425a78465c',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/114215123',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 8
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/114215123',
  timestamp: '2023-09-18T21:40:50.990Z'
}
{
  meta: {
    req: {
      url: '/user/114215123',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '93216905-44a6-4a36-b1e9-53828a5400d9',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/114215123',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/114215123',
  timestamp: '2023-09-18T21:41:00.947Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:52500',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-18T21:41:34.041Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:52502',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T21:41:34.052Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:52504',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-18T21:41:34.057Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58622',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T09:59:59.111Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58624',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T09:59:59.122Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58626',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T09:59:59.127Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58631',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:00:31.914Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58633',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T10:00:31.926Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58635',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:00:31.942Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58637',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:00:31.948Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58639',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 121
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:00:32.071Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58641',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:00:32.190Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58643',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:00:32.306Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58645',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:00:32.309Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58647',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:00:32.312Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58649',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:00:32.427Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58651',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T10:00:32.432Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58653',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:00:39.896Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58655',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T10:00:39.918Z'
}
{
  meta: {
    req: {
      url: '/user/13314124',
      headers: {
        host: '127.0.0.1:58657',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/13314124',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/13314124',
  timestamp: '2023-09-19T10:00:39.926Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58662',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:01:19.388Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58664',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T10:01:19.405Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58666',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:01:19.431Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58668',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:01:19.438Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58670',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 178
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:01:19.620Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58672',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 167
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:01:19.792Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58674',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 135
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:01:19.933Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58676',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:01:19.936Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58678',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:01:19.939Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58680',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:01:20.055Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58682',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T10:01:20.060Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58868',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:09:47.859Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58870',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:09:47.880Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58872',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:09:47.886Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58874',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 123
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:09:48.013Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58876',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 116
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:09:48.132Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58878',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:09:48.248Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58880',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:09:48.252Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58882',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:09:48.255Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58884',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:09:48.370Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58886',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T10:09:48.376Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58889',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:10:11.582Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58894',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:10:53.104Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58906',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:13:09.055Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58912',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:14:07.134Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58918',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:15:09.461Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58920',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:15:09.482Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58922',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:15:09.487Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58924',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 124
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:15:09.614Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58926',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 118
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:15:09.736Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58928',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:15:09.854Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58930',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:15:09.858Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58932',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:15:09.860Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58934',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:15:09.977Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58936',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T10:15:09.983Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58953',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:15:43.498Z'
}
{
  meta: {
    req: {
      url: '/api/users/2',
      headers: {
        host: '127.0.0.1:58955',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/users/2',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /api/users/2',
  timestamp: '2023-09-19T10:15:43.509Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58957',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:15:43.526Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58959',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:15:43.530Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58961',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 130
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:15:43.663Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58963',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 129
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:15:43.800Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58965',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 114
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:15:43.919Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58967',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:15:43.922Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58969',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:15:43.925Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58971',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 116
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:15:44.044Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58974',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T10:15:44.050Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58979',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:17:08.354Z'
}
{
  meta: {
    req: {
      url: '/api/users/2',
      headers: {
        host: '127.0.0.1:58981',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/users/2',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /api/users/2',
  timestamp: '2023-09-19T10:17:08.364Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58983',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:17:08.381Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58985',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:17:08.385Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58987',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 120
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:17:08.508Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58989',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 116
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:17:08.627Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58991',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 114
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:17:08.746Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58993',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:17:08.749Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58995',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:17:08.752Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58997',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 114
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:17:08.869Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58999',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T10:17:08.875Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59050',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:25:35.922Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59052',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:25:35.948Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59054',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:25:35.956Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59056',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 183
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:25:36.143Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59058',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 193
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:25:36.342Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59060',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 126
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:25:36.472Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59062',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:25:36.476Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59064',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:25:36.479Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59066',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 114
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:25:36.596Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59068',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T10:25:36.603Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59076',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:27:29.653Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59078',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:27:29.676Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59080',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:27:29.682Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59082',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 119
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:27:29.804Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59084',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 116
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:27:29.924Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59086',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:27:30.042Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59088',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:27:30.046Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59090',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:27:30.049Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59092',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 114
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:27:30.166Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59094',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T10:27:30.172Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59097',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:27:46.853Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59099',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:27:46.879Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59101',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:27:46.887Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59103',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 173
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:27:47.064Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59105',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 198
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:27:47.269Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59107',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 126
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:27:47.399Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59109',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:27:47.403Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59111',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:27:47.406Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59113',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:27:47.523Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59115',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T10:27:47.529Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59121',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:28:20.346Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59123',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:28:20.367Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59125',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:28:20.373Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59127',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 119
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:28:20.495Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59129',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T10:28:20.614Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59131',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:28:20.732Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59133',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:28:20.735Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59135',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:28:20.738Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59137',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 114
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T10:28:20.855Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59139',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T10:28:20.861Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59141',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:28:53.067Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59146',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:30:21.166Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59420',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:40:11.647Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59458',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:41:24.301Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59523',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:53:33.623Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59535',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:54:20.025Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59541',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:54:36.729Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59547',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T10:55:10.424Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': '73c3986c-be3a-46a0-bb39-64169123861e',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '44'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 126
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-19T10:56:41.783Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'f984d9d8-0b5d-41c8-8a5a-fffc537afa9a',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '42'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 116
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-19T10:56:50.728Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'ec4653b2-8fd0-4360-b667-bb05334f7e4e',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '43'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-19T10:56:54.610Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'c17ee126-430c-41d1-a059-04df86b89f91',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '43'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 146
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-19T10:56:57.838Z'
}
{
  meta: {
    req: {
      url: '/user/register?email=adam&password=test',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'c13836d8-618a-43f7-badb-f0257d5d2e23',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '43'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register?email=adam&password=test',
      query: { email: 'adam', password: 'test' }
    },
    res: { statusCode: 201 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register?email=adam&password=test',
  timestamp: '2023-09-19T10:57:01.349Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59592',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:00:03.023Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59598',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:00:20.407Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59606',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:01:22.031Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59615',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:02:20.892Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59622',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:02:38.206Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:59624',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T11:02:38.219Z'
}
{
  meta: {
    req: {
      url: '/user/2',
      headers: {
        host: '127.0.0.1:59626',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/2',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/2',
  timestamp: '2023-09-19T11:02:38.224Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:59628',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T11:02:38.229Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59630',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T11:02:38.243Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59632',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T11:02:38.247Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59634',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T11:02:38.252Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59639',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:02:56.750Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59680',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:05:32.122Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59686',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:05:51.716Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59694',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:06:33.336Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59702',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:07:01.674Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:59704',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T11:07:01.684Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:59706',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-19T11:07:01.689Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59708',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T11:07:01.702Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59710',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T11:07:01.706Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59712',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T11:07:01.710Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59715',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:07:15.181Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:59717',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T11:07:15.191Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:59719',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-19T11:07:15.196Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59723',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:07:29.907Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:59725',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T11:07:29.917Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:59727',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-19T11:07:29.923Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59730',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:07:46.419Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:59732',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T11:07:46.429Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:59734',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-19T11:07:46.434Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59736',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T11:07:46.448Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59738',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T11:07:46.452Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59740',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T11:07:46.455Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59750',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T11:08:43.776Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:59752',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T11:08:43.791Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:59754',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-19T11:08:43.799Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59756',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T11:08:43.821Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59758',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T11:08:43.826Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59760',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '53',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T11:08:43.829Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60111',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T12:04:59.610Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:60113',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T12:04:59.624Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:60115',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-19T12:04:59.630Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60117',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:04:59.647Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60119',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:04:59.654Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60121',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 217
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:04:59.875Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60127',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T12:05:27.580Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:60129',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T12:05:27.591Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:60131',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-19T12:05:27.595Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60133',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:05:27.609Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60135',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:05:27.613Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60137',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 128
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:05:27.745Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60139',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:05:27.751Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60143',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T12:05:59.502Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:60145',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T12:05:59.512Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:60147',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-19T12:05:59.518Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60149',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:05:59.531Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60151',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:05:59.537Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60153',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 136
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:05:59.677Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60155',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 134
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:05:59.815Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60158',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 201 },
    responseTime: 136
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T12:05:59.956Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60160',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T12:05:59.960Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60162',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T12:05:59.966Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60164',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 202
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T12:06:00.174Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:60166',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T12:06:00.187Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60240',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T12:09:55.393Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:60242',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T12:09:55.403Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:60244',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-19T12:09:55.408Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60246',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:09:55.421Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60248',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:09:55.426Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60250',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 119
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:09:55.547Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60252',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 116
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:09:55.666Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60254',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T12:09:55.783Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60256',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T12:09:55.786Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60258',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T12:09:55.789Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60260',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T12:09:55.905Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:60262',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T12:09:55.910Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60337',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T12:12:29.035Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:60339',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T12:12:29.045Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:60341',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-19T12:12:29.050Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60343',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:12:29.063Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60345',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:12:29.068Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60347',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 118
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:12:29.189Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:60349',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T12:12:29.308Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60351',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T12:12:29.424Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60353',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T12:12:29.427Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60355',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T12:12:29.430Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:60357',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-19T12:12:29.545Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:60359',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T12:12:29.551Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60485',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T12:17:35.771Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:60487',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T12:17:35.785Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:60489',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T12:17:35.792Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:60491',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T12:17:35.801Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60542',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T12:24:15.068Z'
}
{
  meta: {
    req: {
      url: '/get-all-users',
      headers: {
        host: '127.0.0.1:60544',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/get-all-users',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /get-all-users',
  timestamp: '2023-09-19T12:24:15.077Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60551',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T12:24:40.111Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:60553',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T12:24:40.121Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:60555',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T12:24:40.126Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:60557',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T12:24:40.131Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:60559',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T12:24:40.136Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60561',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T12:24:57.338Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:60563',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T12:24:57.347Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:60565',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T12:24:57.351Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:60567',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T12:24:57.357Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60579',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T12:26:37.713Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:60581',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T12:26:37.724Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:60583',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T12:26:37.728Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:60585',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T12:26:37.734Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:60587',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T12:27:21.775Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:60589',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T12:27:21.785Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:60591',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T12:27:21.793Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:60593',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T12:27:21.798Z'
}
{
  meta: {
    req: {
      url: '/user/114215123',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'c5ae3a2a-537b-4bc3-9958-4bdc53b0108a',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/114215123',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 6
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/114215123',
  timestamp: '2023-09-19T12:32:12.161Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'd406a427-084d-439c-b5d1-5aeaa612c6f8',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T12:32:17.863Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'a3293ddb-4327-4970-bb0a-95f4144df52f',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T12:32:21.455Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61546',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T14:53:09.817Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:61548',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T14:53:09.828Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:61550',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T14:53:09.832Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:61552',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-19T14:53:09.837Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61557',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T14:53:26.244Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:61559',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T14:53:26.254Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:61561',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T14:53:26.259Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61563',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T14:53:26.276Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61574',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T14:53:34.296Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61579',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T14:54:03.864Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:61581',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T14:54:03.874Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:61583',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T14:54:03.879Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61587',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T14:54:05.894Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61649',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T15:00:02.832Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:61651',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T15:00:02.842Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:61653',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T15:00:02.846Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61657',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T15:00:04.862Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61671',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T15:00:27.222Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:61673',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T15:00:27.237Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:61675',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T15:00:27.242Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61677',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T15:00:27.249Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61679',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T15:00:38.334Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:61681',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T15:00:38.344Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:61683',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T15:00:38.349Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61685',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T15:00:38.363Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61693',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T15:00:44.385Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61697',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T15:01:22.268Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:61699',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T15:01:22.278Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:61701',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T15:01:22.283Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:61703',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-19T15:01:22.297Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61712',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T15:01:28.328Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61761',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T15:07:04.979Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:61763',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T15:07:04.990Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:61765',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T15:07:04.994Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61774',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T15:07:11.013Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:61777',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-19T15:07:32.551Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:61779',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-19T15:07:32.561Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:61781',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-19T15:07:32.566Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:61783',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-19T15:07:32.575Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51383',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:22:01.701Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51385',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:22:01.712Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51387',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:22:01.716Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51389',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:22:01.724Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51392',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:22:09.220Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51394',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:22:09.234Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51396',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:22:09.241Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51398',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:22:09.262Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51400',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:22:09.273Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51403',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:22:22.348Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51405',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:22:22.358Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51407',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:22:22.362Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51409',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:22:22.376Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51413',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:22:24.389Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51419',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:23:19.661Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51421',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:23:19.671Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51423',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:23:19.675Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51425',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:23:19.689Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51427',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:23:19.696Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51433',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:23:27.012Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51435',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:23:27.022Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51437',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:23:27.026Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51439',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:23:27.040Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51443',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:23:29.057Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51450',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:23:57.359Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51452',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:23:57.370Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51454',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:23:57.375Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51456',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:23:57.390Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51460',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:23:59.407Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        'user-agent': 'PostmanRuntime/7.32.1',
        accept: '*/*',
        'cache-control': 'no-cache',
        'postman-token': 'b7e7696e-db20-4326-b0fa-5764133f5d18',
        host: 'localhost:8080',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-type': 'application/x-www-form-urlencoded',
        'content-length': '42'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 140
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:25:13.493Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51491',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:26:03.989Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51493',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:26:03.998Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51495',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:26:04.003Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51497',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:26:04.017Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51501',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:26:06.032Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51538',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:29:11.748Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51540',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:29:11.758Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51542',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:29:11.763Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51544',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:29:11.783Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51547',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:29:11.789Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51551',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:29:34.062Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51553',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:29:34.072Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51555',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:29:34.077Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51557',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:29:34.091Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51561',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:29:36.107Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51565',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:29:50.530Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51567',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:29:50.540Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51569',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:29:50.545Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51571',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:29:50.559Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51573',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:29:50.565Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51576',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:30:14.921Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51578',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:30:14.931Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51580',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:30:14.935Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51582',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:30:14.949Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51586',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:30:16.966Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51684',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:35:36.254Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51686',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:35:36.265Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51688',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:35:36.269Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51690',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:35:36.283Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51694',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:35:38.296Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51696',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:36:01.075Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51698',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:36:01.085Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51700',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:36:01.089Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51702',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:36:01.103Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51707',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:36:03.119Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51709',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:36:38.817Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51711',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:36:38.827Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51713',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:36:38.833Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51715',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:36:38.847Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51717',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:36:38.854Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51719',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:36:50.199Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51721',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:36:50.208Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51723',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:36:50.213Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51725',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:36:50.227Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51729',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:36:52.242Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51803',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:45:37.788Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51805',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:45:37.798Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51807',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:45:37.802Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51809',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:45:37.816Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51813',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:45:39.831Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51820',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:46:46.906Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51822',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:46:46.918Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51824',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:46:46.924Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51826',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:46:46.939Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51830',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:46:48.955Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51833',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:47:05.195Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51835',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:47:05.205Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51837',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:47:05.209Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51839',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:47:05.223Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51843',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:47:07.234Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51848',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:47:52.814Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51850',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:47:52.824Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51852',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:47:52.829Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51854',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:47:52.843Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51858',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:47:54.858Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51889',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:52:48.996Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51891',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:52:49.009Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51893',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:52:49.015Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51895',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:52:49.029Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51897',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:52:49.037Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51949',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T12:58:08.376Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51951',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T12:58:08.386Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51953',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T12:58:08.390Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51955',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T12:58:08.404Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51957',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T12:58:08.411Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:51977',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T13:01:13.568Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:51979',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T13:01:13.578Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:51981',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T13:01:13.582Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:51983',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T13:01:13.596Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:51985',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T13:01:13.603Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:53219',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T17:35:30.534Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:53221',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T17:35:30.544Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:53223',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T17:35:30.548Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:53225',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T17:35:30.561Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:53227',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T17:35:30.567Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:53236',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T17:36:18.830Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:53238',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T17:36:18.839Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:53240',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T17:36:18.844Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:53242',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T17:36:18.857Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:53246',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T17:36:20.873Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:53267',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T17:38:11.864Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:53269',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T17:38:11.879Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:53271',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T17:38:11.886Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:53273',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T17:38:11.906Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:53277',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T17:38:13.919Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:53430',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T17:48:05.517Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:53432',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T17:48:05.527Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:53434',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T17:48:05.531Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:53436',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T17:48:05.545Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:53440',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T17:48:07.556Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:53452',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T17:49:11.691Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:53454',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T17:49:11.702Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:53456',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T17:49:11.707Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:53458',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T17:49:11.720Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:53462',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T17:49:13.733Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:53468',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-20T17:49:44.482Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:53470',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-20T17:49:44.492Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:53472',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-20T17:49:44.496Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:53474',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-20T17:49:44.510Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:53478',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-20T17:49:46.527Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:56997',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T07:10:14.609Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:56999',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 123
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T07:10:14.750Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:57001',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T07:10:14.755Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:57003',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T07:10:14.761Z'
}
{
  meta: {
    req: {
      url: '/create-note',
      headers: {
        host: '127.0.0.1:57006',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '69',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/create-note',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /create-note',
  timestamp: '2023-09-21T07:10:25.580Z'
}
{
  meta: {
    req: {
      url: '/create-note',
      headers: {
        host: '127.0.0.1:57009',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '69',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/create-note',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /create-note',
  timestamp: '2023-09-21T07:11:00.367Z'
}
{
  meta: {
    req: {
      url: '/create-note',
      headers: {
        host: '127.0.0.1:58065',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '69',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/create-note',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /create-note',
  timestamp: '2023-09-21T10:42:00.700Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58108',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:45:49.135Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58110',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 120
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:45:49.276Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58112',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:45:49.281Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58114',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:45:49.286Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58123',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:46:17.827Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58125',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 121
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:17.969Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58127',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:17.974Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58129',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:17.977Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58131',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:46:17.982Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58133',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:46:25.116Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58135',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 145
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:25.290Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58137',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:25.295Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58139',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:25.298Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58141',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:25.415Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58143',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:46:25.421Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58145',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:46:34.897Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58147',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:46:34.923Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58149',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 139
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:35.068Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58151',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:35.075Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58153',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:35.079Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58155',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 170
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:35.254Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58157',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:46:35.265Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58159',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:46:43.063Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58161',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:46:43.083Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58165',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 134
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:45.229Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58167',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:45.234Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58169',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:45.237Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58171',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:46:45.355Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58173',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:46:45.361Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58176',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:47:23.327Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58178',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:47:23.346Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58182',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 133
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:47:25.488Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58184',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:47:25.493Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58186',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:47:25.496Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58188',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:47:25.613Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58190',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:47:25.619Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58194',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:47:38.886Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58196',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:47:38.905Z'
}
{
  meta: {
    req: {
      url: '/user/login/',
      headers: {
        host: '127.0.0.1:58198',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 124
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login/',
  timestamp: '2023-09-21T10:47:39.034Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58202',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:48:06.140Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58204',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:48:06.165Z'
}
{
  meta: {
    req: {
      url: '/user/login/',
      headers: {
        host: '127.0.0.1:58206',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 170
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login/',
  timestamp: '2023-09-21T10:48:06.341Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58208',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 163
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:06.509Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58210',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:06.515Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58212',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:06.519Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58214',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 167
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:06.690Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58216',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:48:06.700Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58218',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:48:16.439Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58220',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:48:16.467Z'
}
{
  meta: {
    req: {
      url: '/user/login/',
      headers: {
        host: '127.0.0.1:58222',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 139
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login/',
  timestamp: '2023-09-21T10:48:16.611Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58224',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:48:16.616Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58226',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 136
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:16.755Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58228',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:16.760Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58230',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:16.764Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58232',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 131
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:16.899Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58234',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:48:16.908Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58237',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:48:23.664Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58239',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:48:23.684Z'
}
{
  meta: {
    req: {
      url: '/user/login/',
      headers: {
        host: '127.0.0.1:58241',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 122
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login/',
  timestamp: '2023-09-21T10:48:23.810Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58243',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:48:23.814Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58245',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 116
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:23.934Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58247',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:23.938Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58249',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:23.943Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58251',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:24.059Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58253',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:48:24.065Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58255',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:48:31.604Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58257',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:48:31.624Z'
}
{
  meta: {
    req: {
      url: '/user/login/',
      headers: {
        host: '127.0.0.1:58259',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 123
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login/',
  timestamp: '2023-09-21T10:48:31.750Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58261',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:48:31.754Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58263',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 115
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:48:31.871Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58265',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 114
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:31.988Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58267',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:31.993Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58269',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:31.996Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58271',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 114
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:32.112Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58273',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:48:32.120Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58275',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:48:56.790Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58277',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T10:48:56.799Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:58279',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-21T10:48:56.804Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58281',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:48:56.818Z'
}
{
  meta: {
    req: {
      url: '/user/login/',
      headers: {
        host: '127.0.0.1:58283',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 131
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login/',
  timestamp: '2023-09-21T10:48:56.953Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58285',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:48:56.958Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58287',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 166
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:48:57.131Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58289',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 167
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:57.305Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58291',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:57.314Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58293',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:57.321Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58295',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 169
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:48:57.493Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58297',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:48:57.503Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58300',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:49:06.887Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58302',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:49:06.897Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58304',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T10:49:06.901Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58306',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T10:49:06.908Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58317',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:50:29.503Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58319',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:50:29.513Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58321',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T10:50:29.520Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58323',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:50:29.535Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58333',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:50:37.563Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58335',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:50:38.623Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58337',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T10:50:38.633Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:58339',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-21T10:50:38.637Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58341',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:50:38.652Z'
}
{
  meta: {
    req: {
      url: '/user/login/',
      headers: {
        host: '127.0.0.1:58343',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 122
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login/',
  timestamp: '2023-09-21T10:50:38.777Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58345',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:50:38.781Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58347',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:50:38.896Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58349',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:50:39.014Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58351',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:50:39.018Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58353',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:50:39.021Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58355',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:50:39.136Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58357',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:50:39.141Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58361',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:51:06.590Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58363',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:51:06.603Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58365',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T10:51:06.609Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58367',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T10:51:06.615Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58372',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T10:52:07.460Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58374',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T10:52:07.471Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:58376',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-21T10:52:07.476Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58378',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:52:07.490Z'
}
{
  meta: {
    req: {
      url: '/user/login/',
      headers: {
        host: '127.0.0.1:58380',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 122
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login/',
  timestamp: '2023-09-21T10:52:07.615Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58382',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:52:07.619Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:58384',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T10:52:07.734Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58386',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 114
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:52:07.852Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58388',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:52:07.856Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58390',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:52:07.860Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:58392',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 114
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T10:52:07.976Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58394',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:52:07.981Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:58444',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T10:54:18.601Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58447',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T10:54:41.977Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:58449',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-21T10:54:41.987Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58451',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:54:52.291Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58453',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T10:54:52.301Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58455',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:55:14.280Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58468',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:55:44.137Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58470',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:55:44.147Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58472',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T10:55:44.151Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58475',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:55:53.925Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58477',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:55:53.934Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58479',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T10:55:53.938Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58481',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T10:55:53.943Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58483',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T10:56:06.809Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:58485',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-21T10:56:06.819Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58490',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:56:46.487Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58492',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:56:46.498Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58494',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T10:56:46.502Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58496',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T10:56:46.508Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58508',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 10
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:58:28.084Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58510',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:58:28.095Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58512',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T10:58:28.098Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58514',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T10:58:28.104Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58516',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:58:57.769Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58518',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:58:57.778Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58520',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T10:58:57.781Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58525',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 7
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T10:59:08.817Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:58527',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-21T10:59:08.831Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58530',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:59:17.633Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58532',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T10:59:17.647Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58534',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T10:59:17.652Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58536',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T10:59:17.659Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58899',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 4
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T12:00:36.100Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58901',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T12:00:36.109Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58903',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:00:36.112Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58924',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T12:00:49.406Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58926',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T12:00:49.415Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58928',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:00:49.418Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58930',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T12:00:49.423Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58932',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T12:01:26.287Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58934',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T12:01:26.296Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58936',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:01:26.300Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:58938',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-21T12:01:26.306Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58942',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T12:01:38.642Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58944',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T12:01:38.653Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58946',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:01:38.657Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58949',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T12:01:49.369Z'
}
{
  meta: {
    req: {
      url: '/user/',
      headers: {
        host: '127.0.0.1:58951',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/',
  timestamp: '2023-09-21T12:01:49.379Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58953',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:01:49.382Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58955',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T12:01:49.387Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58973',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:03:24.649Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58975',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:03:24.658Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58982',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:04:21.061Z'
}
{
  meta: {
    req: {
      url: '/user1',
      headers: {
        host: '127.0.0.1:58984',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user1',
  timestamp: '2023-09-21T12:04:21.069Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58987',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 3
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:04:30.237Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58989',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T12:04:30.247Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:58991',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-21T12:04:30.252Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:58994',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T12:05:02.219Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:58996',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:05:02.228Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:58998',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T12:05:02.233Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:59000',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-21T12:05:02.238Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59002',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T12:05:02.252Z'
}
{
  meta: {
    req: {
      url: '/user/login/',
      headers: {
        host: '127.0.0.1:59004',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 124
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login/',
  timestamp: '2023-09-21T12:05:02.382Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59006',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T12:05:02.387Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59008',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 128
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T12:05:02.520Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59010',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 169
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:05:02.694Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59012',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:05:02.700Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59014',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:05:02.705Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59016',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 154
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:05:02.862Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59018',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T12:05:02.869Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59033',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T12:06:40.890Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:59035',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:06:40.899Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:59037',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T12:06:40.904Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:59039',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-21T12:06:40.908Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59041',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T12:06:40.922Z'
}
{
  meta: {
    req: {
      url: '/user/login/',
      headers: {
        host: '127.0.0.1:59043',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 120
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login/',
  timestamp: '2023-09-21T12:06:41.046Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59045',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T12:06:41.050Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59047',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T12:06:41.165Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59049',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 114
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:06:41.282Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59051',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:06:41.287Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59053',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:06:41.289Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59055',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:06:41.404Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59057',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T12:06:41.409Z'
}
{
  meta: {
    req: {
      url: '/create-note',
      headers: {
        host: '127.0.0.1:59062',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '69',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/create-note',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /create-note',
  timestamp: '2023-09-21T12:07:54.015Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59064',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T12:08:10.361Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:59066',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:08:10.371Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:59068',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T12:08:10.376Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:59070',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-21T12:08:10.380Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59072',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T12:08:10.395Z'
}
{
  meta: {
    req: {
      url: '/user/login/',
      headers: {
        host: '127.0.0.1:59074',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 121
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login/',
  timestamp: '2023-09-21T12:08:10.520Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59076',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T12:08:10.524Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59078',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 114
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T12:08:10.640Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59080',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 122
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:08:10.767Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59082',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:08:10.772Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59084',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:08:10.775Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59086',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 117
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:08:10.895Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59088',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T12:08:10.902Z'
}
{
  meta: {
    req: {
      url: '/',
      headers: {
        host: '127.0.0.1:59152',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /',
  timestamp: '2023-09-21T12:11:15.419Z'
}
{
  meta: {
    req: {
      url: '/user',
      headers: {
        host: '127.0.0.1:59154',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user',
  timestamp: '2023-09-21T12:11:15.429Z'
}
{
  meta: {
    req: {
      url: '/user/1',
      headers: {
        host: '127.0.0.1:59156',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/1',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 2
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/1',
  timestamp: '2023-09-21T12:11:15.434Z'
}
{
  meta: {
    req: {
      url: '/user/999',
      headers: {
        host: '127.0.0.1:59158',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/user/999',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /user/999',
  timestamp: '2023-09-21T12:11:15.438Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59160',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '2',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T12:11:15.452Z'
}
{
  meta: {
    req: {
      url: '/user/login/',
      headers: {
        host: '127.0.0.1:59162',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '48',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login/',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 121
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login/',
  timestamp: '2023-09-21T12:11:15.577Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59164',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '60',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T12:11:15.581Z'
}
{
  meta: {
    req: {
      url: '/user/login',
      headers: {
        host: '127.0.0.1:59166',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/login',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/login',
  timestamp: '2023-09-21T12:11:15.696Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59168',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 113
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:11:15.812Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59170',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '27',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:11:15.817Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59172',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:11:15.820Z'
}
{
  meta: {
    req: {
      url: '/user/register/',
      headers: {
        host: '127.0.0.1:59174',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '58',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/user/register/',
      query: {}
    },
    res: { statusCode: 409 },
    responseTime: 112
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP POST /user/register/',
  timestamp: '2023-09-21T12:11:15.934Z'
}
{
  meta: {
    req: {
      url: '/welcome',
      headers: {
        host: '127.0.0.1:59176',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer yourAccessToken',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/welcome',
      query: {}
    },
    res: { statusCode: 200 },
    responseTime: 0
  },
  level: '\x1B[32minfo\x1B[39m',
  message: 'HTTP GET /welcome',
  timestamp: '2023-09-21T12:11:15.940Z'
}
